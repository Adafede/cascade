[{"path":"https://adafede.github.io/cascade/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://adafede.github.io/cascade/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://adafede.github.io/cascade/articles/I-basics.html","id":"check-the-raw-data-and-alignment","dir":"Articles","previous_headings":"","what":"Check the raw data and alignment","title":"1 Basics","text":"First, check raw data can aligned expectations: , details: look like (CAD PDA shifts incorrectly set):","code":""},{"path":"https://adafede.github.io/cascade/articles/I-basics.html","id":"check-the-peak-integration","dir":"Articles","previous_headings":"","what":"Check the peak integration","title":"1 Basics","text":"Another critical parameter peak integration. illustrations: peaks still missed looks overall correct. Depending runs, can get slightly better baseline correction: now recommend read next vignette.","code":""},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"compare-peaks-to-features","dir":"Articles","previous_headings":"","what":"Compare peaks to features","title":"2 Processing","text":", need: previously generated mzmine features’ table , able run basically ! 🚀","code":"process_compare_peaks(show_example = TRUE) #> loading MS data #> Loading example MS file in memory, doing it on disk will be more efficient #> loading chromatograms #> loading name #> loading feature table #> preparing features #> selecting 10 random features for the example #> ... preparing features #> ... keeping features above desired intensity only #> setting joining keys #> preprocessing chromatograms #> preprocessing cad chromatograms #> improving chromatograms #> baselining chromatograms #> preprocessing peaks #> preprocessing cad peaks #> joining peaks #> joining within given rt tolerance #> selecting features outside peaks #> splitting by file #> splitting by peak #> normalizing chromato #> preparing peaks chromato #> preparing rt #> preparing mz #> processing cad peaks #> extracting ms chromatograms (longest step) #> count approx 1 minute per worker per 1000 features (increasing with features number) #> varies a lot depending on features distribution #> CAD Peak: 1 #>  ■■■■                               9% |  ETA:  1m #> CAD Peak: 2 #>  ■■■■■■                            18% |  ETA:  1m #> CAD Peak: 3 #>  ■■■■■■■■■                         27% |  ETA:  1m #> CAD Peak: 4 #>  ■■■■■■■■■■■■                      36% |  ETA:  1m #> CAD Peak: 5 #>  ■■■■■■■■■■■■■■■                   45% |  ETA: 45s #> CAD Peak: 6 #>  ■■■■■■■■■■■■■■■■■                 55% |  ETA: 38s #> CAD Peak: 7 #>  ■■■■■■■■■■■■■■■■■■■■              64% |  ETA: 30s #> CAD Peak: 8 #>  ■■■■■■■■■■■■■■■■■■■■■■■           73% |  ETA: 22s #> CAD Peak: 9 #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■        82% |  ETA: 15s #> CAD Peak: 10 #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% |  ETA:  7s #> CAD Peak: 11 #> extracting ms peaks #> comparing peaks #> selecting features with peaks #> there are 13 features - peaks pairs #> summarizing comparison scores #> there are 13 scores calculated #> joining #> final aesthetics #> checking export directory #> exporting"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"pseudo-chromatograms","dir":"Articles","previous_headings":"","what":"Pseudo chromatograms","title":"2 Processing","text":"know want add cosmetics, already TIMA annotation table, can run: different plots offer following views:     getting rid chromatogram: together comparison:","code":"plots_list <- generate_pseudochromatograms(show_example = TRUE) plots_list$plots_1$histograms_taxo_maj plots_list$plots_1$histograms_taxo_min plots_list$plots_1$histograms_unique_conf_maj plots_list$plots_1$histograms_unique_conf_min plots_list$treemaps$peaks_maj plots_list$treemaps$peaks_min plots_list$treemaps$special"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"taxo-major-peaks","dir":"Articles","previous_headings":"","what":"Taxo (major peaks)","title":"2 Processing","text":"","code":"plots_list$plots_1$histograms_taxo_maj"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"taxo-minor-peaks","dir":"Articles","previous_headings":"","what":"Taxo (minor peaks)","title":"2 Processing","text":"","code":"plots_list$plots_1$histograms_taxo_min"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"confident-unique-annotations-major","dir":"Articles","previous_headings":"","what":"Confident unique annotations (major)","title":"2 Processing","text":"","code":"plots_list$plots_1$histograms_unique_conf_maj"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"confident-unique-annotations-minor","dir":"Articles","previous_headings":"","what":"Confident unique annotations (minor)","title":"2 Processing","text":"getting rid chromatogram:","code":"plots_list$plots_1$histograms_unique_conf_min"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"treemap-semi-quantitative-major","dir":"Articles","previous_headings":"","what":"Treemap semi-quantitative (major)","title":"2 Processing","text":"","code":"plots_list$treemaps$peaks_maj"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"treemap-semi-quantitative-minor","dir":"Articles","previous_headings":"","what":"Treemap semi-quantitative (minor)","title":"2 Processing","text":"together comparison:","code":"plots_list$treemaps$peaks_min"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"treemap-both","dir":"Articles","previous_headings":"","what":"Treemap both","title":"2 Processing","text":"","code":"plots_list$treemaps$special"},{"path":"https://adafede.github.io/cascade/articles/II-processing.html","id":"tabular-reports","dir":"Articles","previous_headings":"","what":"Tabular reports","title":"2 Processing","text":"prefer tables rather figures, can also: export table CSV /HTML. small preview HTML table presented : available helper functions, now recommend read next vignette.","code":"tables_list <- generate_tables(show_example = TRUE) #> INFO [2025-07-03 16:08:22] Downloading 230106_frozen_metadata.csv.gz from https://doi.org/10.5281/zenodo.5794106 (The LOTUS Initiative for Open Natural Products Research: frozen dataset union wikidata (with metadata); unique identifier: https://doi.org/10.5281/zenodo.7534071) #> INFO [2025-07-03 16:08:22] Directory data/source/libraries created. tables_list$pretty_table"},{"path":"https://adafede.github.io/cascade/articles/III-bonus.html","id":"quick-overview-of-the-literature","dir":"Articles","previous_headings":"","what":"Quick overview of the literature","title":"3 Bonus","text":"check (eventually compare results) known literature different organisms:    hope enjoyed using CASCADE pleased hear ! remark suggestion, please fill issue feel free contact us directly.","code":"bonus_plots_list <- generate_ids(   taxa = c(\"Swertia\", \"Kopsia\", \"Ginkgo\"),   comparison = c(\"Swertia\", \"Kopsia\"),   no_stereo = TRUE,   filter_ms_conditions = TRUE,   start = \"1950\",   end = \"2025\" ) #> INFO [2025-07-03 16:09:26] A file with the same size is already present. Skipping bonus_plots_list$plots$Swertia bonus_plots_list$plots$Kopsia_grouped bonus_plots_list$plots$special"},{"path":"https://adafede.github.io/cascade/articles/III-bonus.html","id":"compounds-found-in-swertia","dir":"Articles","previous_headings":"","what":"Compounds found in Swertia","title":"3 Bonus","text":"","code":"bonus_plots_list$plots$Swertia"},{"path":"https://adafede.github.io/cascade/articles/III-bonus.html","id":"compounds-found-in-kopsia-per-species","dir":"Articles","previous_headings":"","what":"Compounds found in Kopsia (per species)","title":"3 Bonus","text":"","code":"bonus_plots_list$plots$Kopsia_grouped"},{"path":"https://adafede.github.io/cascade/articles/III-bonus.html","id":"comparison","dir":"Articles","previous_headings":"","what":"Comparison","title":"3 Bonus","text":"hope enjoyed using CASCADE pleased hear ! remark suggestion, please fill issue feel free contact us directly.","code":"bonus_plots_list$plots$special"},{"path":"https://adafede.github.io/cascade/articles/IV-tima.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"4 Visualizing raw TIMA results","text":"check full results:  compare annotated predicted classes:  compare different filtering thresholds:  hope enjoyed using CASCADE pleased hear ! remark suggestion, please fill issue feel free contact us directly.","code":"plots <- cascade::prepare_tima_annotations(   show_example = TRUE ) |>    cascade::plot_tima() # cascade::prepare_tima_annotations( #   annotations = list( #     \"yourExperiment1\"=\"PathToYourTimaOutput1\", #     \"yourExperiment2\"=\"PathToYourTimaOutput2\" #     ) # ) |>  #   cascade::plot_tima() plots$histogram plots$treemap plots$sunburst list(   cascade::prepare_tima_annotations(     show_example = TRUE     ),   cascade::prepare_tima_annotations(     show_example = TRUE,     predicted_classes = TRUE     )   ) |>   tidytable::bind_rows() |>   list() |>   cascade::plot_tima() |>   purrr::pluck(\"histogram\") list(   cascade::prepare_tima_annotations(     show_example = TRUE   ),    cascade::prepare_tima_annotations(     show_example = TRUE,     min_score_biological = 0.2,     min_score_final = 0.4   ),   cascade::prepare_tima_annotations(     show_example = TRUE,     min_score_initial = 0.2,     min_score_biological = 0.2,     min_score_chemical = 0.2,     min_score_final = 0.4,     min_matched_peaks_absolute = 6L,     min_matched_peaks_percentage = 0.5,     min_peaks = 10L     )   ) |>   tidytable::bind_rows() |>   list() |>    cascade::plot_tima() |>   purrr::pluck(\"histogram\")"},{"path":"https://adafede.github.io/cascade/articles/cascade.html","id":"pre-requisites","dir":"Articles","previous_headings":"","what":"Pre-requisites","title":"General comments about the use of CASCADE","text":"file (.mzML) containing DDA MS data additional detector (PDA, ELSD, CAD) file (.csv) containing features, obtained mzmine file (.tsv) containing annotations, obtained TIMA coming steps admit already installed cascade:","code":"install.packages(   \"cascade\",   repos = c(     \"https://adafede.r-universe.dev\",     \"https://bioc.r-universe.dev\",     \"https://cloud.r-project.org\"   ) )"},{"path":"https://adafede.github.io/cascade/articles/cascade.html","id":"more-details","dir":"Articles","previous_headings":"","what":"More details","title":"General comments about the use of CASCADE","text":"details available related vignettes.","code":""},{"path":"https://adafede.github.io/cascade/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adriano Rutz. Author, maintainer.","code":""},{"path":"https://adafede.github.io/cascade/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rutz (2025). cascade: Contextualizing untargeted Annotation Semi-quantitative Charged Aerosol Detection pertinent characterization natural Extracts. R package, version 0.0.9001. Adriano Rutz Jean-Luc Wolfender. (10 November 2023). Automated Composition Assessment Natural Extracts: Untargeted Mass Spectrometry-Based Metabolite Profiling Integrating Semiquantitative Detection. Journal Agricultural Food Chemistry. 71 (46), 18010-18023. doi:10.1021/acs.jafc.3c03099. pmc:PMC10683005. pmid:37949451. qid:Q123938369.","code":"@Manual{,   title = {cascade: Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts},   author = {Adriano Rutz},   year = {2025},   note = {R package, version 0.0.9001}, } @Article{,   title = {Automated Composition Assessment of Natural Extracts: Untargeted Mass Spectrometry-Based Metabolite Profiling Integrating Semiquantitative Detection},   author = {Adriano Rutz and Jean-Luc Wolfender},   journal = {Journal of Agricultural and Food Chemistry},   year = {2023},   volume = {71},   number = {46},   url = {https://doi.org/10.1021/acs.jafc.3c03099},   language = {en},   keywords = {metabolite annotation, charged aerosol detector, semi-quantitative, natural products, computational metabolomics, specialized metabolome},   doi = {10.1021/acs.jafc.3c03099},   issn = {1664-462X},   pmc = {PMC10683005},   pmid = {37949451},   qid = {Q123938369}, }"},{"path":"https://adafede.github.io/cascade/index.html","id":"cascade-","dir":"","previous_headings":"","what":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"Contextualizing untargeted Annotation Semi-quantitative Charged Aerosol Detection pertinent characterization natural Extracts. ⚠️ repository maintained except extreme interest. just opened sake transparency. initial work available https://doi.org/10.1021/acs.jafc.3c03099, improvements made since . workflow illustrated .","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"minimally need: case don’t know obtain , see: wiki/--create--compliant-mzML-file file (.csv) containing features, obtained mzmine file (.tsv) containing annotations, obtained TIMA","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"package (yet) available CRAN, need install : installed, ready go documentation, major steps detailed.","code":"install.packages(   \"cascade\",   repos = c(     \"https://adafede.r-universe.dev\",     \"https://bioc.r-universe.dev\",     \"https://cloud.r-project.org\"   ) )"},{"path":[]},{"path":"https://adafede.github.io/cascade/index.html","id":"cascade","dir":"","previous_headings":"Main Citations","what":"CASCADE","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"https://doi.org/10.1021/acs.jafc.3c03099 According steps used, please give credit authors tools/resources used.","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"mzmine","dir":"","previous_headings":"Main Citations","what":"mzmine","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"General: https://doi.org/10.1038/s41587-023-01690-2","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"sirius","dir":"","previous_headings":"Main Citations","what":"SIRIUS","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"General: https://doi.org/10.1038/s41592-019-0344-8 CSI:FingerId: https://doi.org/10.1073/pnas.1509788112 ZODIAC: https://doi.org/10.1038/s42256-020-00234-6 CANOPUS: https://doi.org/10.1038/s41587-020-0740-8 COSMIC: https://doi.org/10.1038/s41587-021-01045-9","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"lotus","dir":"","previous_headings":"Main Citations","what":"LOTUS","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"General: https://doi.org/10.7554/eLife.70780 ⚠️ forget cite version used: https://doi.org/10.5281/zenodo.5794106","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"isdb","dir":"","previous_headings":"Main Citations","what":"ISDB","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"General: https://doi.org/10.1021/acs.analchem.5b04804 ⚠️ forget cite version used: https://doi.org/10.5281/zenodo.5607185","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"tima","dir":"","previous_headings":"Main Citations","what":"TIMA","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"General: https://doi.org/10.3389/fpls.2019.01329 ⚠️ forget cite version used: https://doi.org/10.5281/zenodo.5797920","code":""},{"path":"https://adafede.github.io/cascade/index.html","id":"others","dir":"","previous_headings":"Main Citations","what":"Others","title":"Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts","text":"RforMassSpectrometry packages suite MS2 matching: https://doi.org/10.3390/metabo12020173 chromatographR: https://doi.org/10.5281/zenodo.6944334 NPClassifier: https://doi.org/10.1021/acs.jnatprod.1c00399","code":""},{"path":"https://adafede.github.io/cascade/reference/add_chromato_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Add chromato line — add_chromato_line","title":"Add chromato line — add_chromato_line","text":"Add chromato line","code":""},{"path":"https://adafede.github.io/cascade/reference/add_chromato_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add chromato line — add_chromato_line","text":"","code":"add_chromato_line(   plot,   chromato,   shift = 0,   normalize_time,   name,   color,   polarity = \"pos\" )"},{"path":"https://adafede.github.io/cascade/reference/add_chromato_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add chromato line — add_chromato_line","text":"plot Plot chromato Chromato shift Shift normalize_time Normalize time name Name color Color polarity Polarity","code":""},{"path":"https://adafede.github.io/cascade/reference/add_chromato_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add chromato line — add_chromato_line","text":"plot added chromato line","code":""},{"path":"https://adafede.github.io/cascade/reference/add_chromato_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add chromato line — add_chromato_line","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/baseline_chromatogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Baseline chromatogram — baseline_chromatogram","title":"Baseline chromatogram — baseline_chromatogram","text":"Baseline chromatogram","code":""},{"path":"https://adafede.github.io/cascade/reference/baseline_chromatogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Baseline chromatogram — baseline_chromatogram","text":"","code":"baseline_chromatogram(df)"},{"path":"https://adafede.github.io/cascade/reference/baseline_chromatogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Baseline chromatogram — baseline_chromatogram","text":"df Dataframe","code":""},{"path":"https://adafede.github.io/cascade/reference/baseline_chromatogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Baseline chromatogram — baseline_chromatogram","text":"dataframe baselined chromatogram","code":""},{"path":"https://adafede.github.io/cascade/reference/baseline_chromatogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Baseline chromatogram — baseline_chromatogram","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/cascade-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cascade: Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts — cascade-package","title":"cascade: Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts — cascade-package","text":"package provides infrastructure perform Automated Composition Assessment Natural Extracts.","code":""},{"path":[]},{"path":"https://adafede.github.io/cascade/reference/cascade-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cascade: Contextualizing untargeted Annotation with Semi-quantitative Charged Aerosol Detection for pertinent characterization of natural Extracts — cascade-package","text":"Maintainer: Adriano Rutz adafede@gmail.com (ORCID)","code":""},{"path":"https://adafede.github.io/cascade/reference/change_intensity_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Change intensity name — change_intensity_name","title":"Change intensity name — change_intensity_name","text":"Change intensity name","code":""},{"path":"https://adafede.github.io/cascade/reference/change_intensity_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change intensity name — change_intensity_name","text":"","code":"change_intensity_name(df, name_rt = \"rtime\", name_intensity = \"intensity\")"},{"path":"https://adafede.github.io/cascade/reference/change_intensity_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change intensity name — change_intensity_name","text":"df Dataframe name_rt Name RT name_intensity Name intensity","code":""},{"path":"https://adafede.github.io/cascade/reference/change_intensity_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change intensity name — change_intensity_name","text":"dataframe changed intensity name","code":""},{"path":"https://adafede.github.io/cascade/reference/change_intensity_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change intensity name — change_intensity_name","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Check chromatograms — check_chromatograms","title":"Check chromatograms — check_chromatograms","text":"Check chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check chromatograms — check_chromatograms","text":"","code":"check_chromatograms(   chromatograms = c(\"bpi_pos\", \"cad_pos\", \"pda_pos\"),   chromatograms_list,   normalize_time = FALSE,   shift_cad = 0,   shift_pda = 0,   type = \"improved\" )"},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check chromatograms — check_chromatograms","text":"chromatograms Chromatograms chromatograms_list Chromatograms list normalize_time Normalized time shift_cad Shift CAD shift_pda Shift PDA type Type","code":""},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check chromatograms — check_chromatograms","text":"plot","code":""},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check chromatograms — check_chromatograms","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Check chromatograms alignment — check_chromatograms_alignment","title":"Check chromatograms alignment — check_chromatograms_alignment","text":"Check chromatograms alignment","code":""},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check chromatograms alignment — check_chromatograms_alignment","text":"","code":"check_chromatograms_alignment(   file_negative = NULL,   file_positive = NULL,   time_min = 0.5,   time_max = 32.5,   cad_shift = 0.05,   pda_shift = 0.1,   fourier_components = 0.01,   frequency = 1,   resample = 1,   chromatograms = c(\"bpi_pos\", \"cad_pos\", \"pda_pos\"),   headers = c(bpi = \"BasePeak_0\", pda = \"PDA#1_TotalAbsorbance_0\", cad = \"UV#1_CAD_1_0\"),   type = \"baselined\",   normalize_intensity = TRUE,   normalize_time = FALSE,   show_example = FALSE )"},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check chromatograms alignment — check_chromatograms_alignment","text":"file_negative Negative file path file_positive Positive file path time_min Minimum time time_max Maximum time cad_shift CAD shift pda_shift PDA shift fourier_components Fourier components frequency Frequency resample Resample chromatograms Chromatograms plot headers Headers type Type. \"baselined\" \"improved\" normalize_intensity Normalize intensity? Default TRUE normalize_time Normalize time? Default FALSE show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms_alignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check chromatograms alignment — check_chromatograms_alignment","text":"plot (non-)aligned chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/check_chromatograms_alignment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check chromatograms alignment — check_chromatograms_alignment","text":"","code":"if (FALSE) { # \\dontrun{ check_chromatograms_alignment(show_example = TRUE) } # }"},{"path":"https://adafede.github.io/cascade/reference/check_export_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Check export dir — check_export_dir","title":"Check export dir — check_export_dir","text":"Check export dir","code":""},{"path":"https://adafede.github.io/cascade/reference/check_export_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check export dir — check_export_dir","text":"","code":"check_export_dir(dir)"},{"path":"https://adafede.github.io/cascade/reference/check_export_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check export dir — check_export_dir","text":"dir Dir","code":""},{"path":"https://adafede.github.io/cascade/reference/check_export_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check export dir — check_export_dir","text":"log checked dir","code":""},{"path":"https://adafede.github.io/cascade/reference/check_export_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check export dir — check_export_dir","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/check_peaks_integration.html","id":null,"dir":"Reference","previous_headings":"","what":"Check chromatograms alignment — check_peaks_integration","title":"Check chromatograms alignment — check_peaks_integration","text":"Check chromatograms alignment","code":""},{"path":"https://adafede.github.io/cascade/reference/check_peaks_integration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check chromatograms alignment — check_peaks_integration","text":"","code":"check_peaks_integration(   file = NULL,   features = NULL,   detector = \"cad\",   chromatogram = \"baselined\",   headers = c(bpi = \"BasePeak_0\", pda = \"PDA#1_TotalAbsorbance_0\", cad = \"UV#1_CAD_1_0\"),   min_area = 0.005,   min_intensity = 10000,   shift = 0.05,   show_example = FALSE,   fourier_components = 0.01,   time_min = 0.5,   time_max = 32.5,   frequency = 1,   resample = 1 )"},{"path":"https://adafede.github.io/cascade/reference/check_peaks_integration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check chromatograms alignment — check_peaks_integration","text":"file File path features Features path detector Detector chromatogram Chromatogram headers Headers min_area Minimum area min_intensity Minimum intensity shift shift show_example Show example? Default FALSE fourier_components Fourier components time_min Time min time_max Time max frequency Frequency resample Resample","code":""},{"path":"https://adafede.github.io/cascade/reference/check_peaks_integration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check chromatograms alignment — check_peaks_integration","text":"plot (non-)aligned chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/check_peaks_integration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check chromatograms alignment — check_peaks_integration","text":"","code":"if (FALSE) { # \\dontrun{ check_peaks_integration(show_example = TRUE) } # }"},{"path":"https://adafede.github.io/cascade/reference/compare_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare peaks — compare_peaks","title":"Compare peaks — compare_peaks","text":"Compare peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/compare_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare peaks — compare_peaks","text":"","code":"compare_peaks(x, list_ms_peaks, peaks_prelist)"},{"path":"https://adafede.github.io/cascade/reference/compare_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare peaks — compare_peaks","text":"x X list_ms_peaks list_ms_peaks peaks_prelist peaks_prelist","code":""},{"path":"https://adafede.github.io/cascade/reference/compare_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare peaks — compare_peaks","text":"comparison score","code":""},{"path":"https://adafede.github.io/cascade/reference/compare_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare peaks — compare_peaks","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/deriv.html","id":null,"dir":"Reference","previous_headings":"","what":"Deriv — deriv","title":"Deriv — deriv","text":"Deriv","code":""},{"path":"https://adafede.github.io/cascade/reference/deriv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deriv — deriv","text":"","code":"deriv(x, y)"},{"path":"https://adafede.github.io/cascade/reference/deriv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deriv — deriv","text":"x X y Y","code":""},{"path":"https://adafede.github.io/cascade/reference/deriv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deriv — deriv","text":"derivative","code":""},{"path":"https://adafede.github.io/cascade/reference/deriv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deriv — deriv","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/extract_chromatogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract chromatogram — extract_chromatogram","title":"Extract chromatogram — extract_chromatogram","text":"Extract chromatogram","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_chromatogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract chromatogram — extract_chromatogram","text":"","code":"extract_chromatogram(list, type, headers)"},{"path":"https://adafede.github.io/cascade/reference/extract_chromatogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract chromatogram — extract_chromatogram","text":"list List type Type headers Headers","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_chromatogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract chromatogram — extract_chromatogram","text":"extracted chromatogram","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_chromatogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract chromatogram — extract_chromatogram","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/extract_ms_peak.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract MS peak — extract_ms_peak","title":"Extract MS peak — extract_ms_peak","text":"Extract MS peak","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_ms_peak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract MS peak — extract_ms_peak","text":"","code":"extract_ms_peak(x)"},{"path":"https://adafede.github.io/cascade/reference/extract_ms_peak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract MS peak — extract_ms_peak","text":"x X","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_ms_peak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract MS peak — extract_ms_peak","text":"peak","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_ms_peak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract MS peak — extract_ms_peak","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/extract_ms_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract MS progress — extract_ms_progress","title":"Extract MS progress — extract_ms_progress","text":"Extract MS progress","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_ms_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract MS progress — extract_ms_progress","text":"","code":"extract_ms_progress(xs, ms_data, rts, mzs, nrows)"},{"path":"https://adafede.github.io/cascade/reference/extract_ms_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract MS progress — extract_ms_progress","text":"xs XS ms_data MS Data rts RTs mzs MZs nrows N rows","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_ms_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract MS progress — extract_ms_progress","text":"list extracted MS peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/extract_ms_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract MS progress — extract_ms_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/filter_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter FFT — filter_fft","title":"Filter FFT — filter_fft","text":"Filter FFT","code":""},{"path":"https://adafede.github.io/cascade/reference/filter_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter FFT — filter_fft","text":"","code":"filter_fft(x, components)"},{"path":"https://adafede.github.io/cascade/reference/filter_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter FFT — filter_fft","text":"x X components Components","code":""},{"path":"https://adafede.github.io/cascade/reference/filter_fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter FFT — filter_fft","text":"fourier filtered x","code":""},{"path":"https://adafede.github.io/cascade/reference/filter_fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter FFT — filter_fft","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/format_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Temp GT function — format_gt","title":"Temp GT function — format_gt","text":"Temp GT function","code":""},{"path":"https://adafede.github.io/cascade/reference/format_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temp GT function — format_gt","text":"","code":"format_gt(table, title = \"\", subtitle = \"\")"},{"path":"https://adafede.github.io/cascade/reference/format_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temp GT function — format_gt","text":"table Table title Title subtitle Subtitle","code":""},{"path":"https://adafede.github.io/cascade/reference/format_gt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temp GT function — format_gt","text":"formatted GT table","code":""},{"path":"https://adafede.github.io/cascade/reference/format_gt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temp GT function — format_gt","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/generate_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate IDs — generate_ids","title":"Generate IDs — generate_ids","text":"Generate IDs","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate IDs — generate_ids","text":"","code":"generate_ids(   taxa = c(\"Swertia\", \"Kopsia\", \"Ginkgo\"),   comparison = NULL,   no_stereo = TRUE,   filter_ms_conditions = TRUE,   start = \"0\",   end = \"9999\",   limit = \"1000000\" )"},{"path":"https://adafede.github.io/cascade/reference/generate_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate IDs — generate_ids","text":"taxa Taxa comparison Comparison no_stereo stereo filter_ms_conditions Filter MS conditions start Start end End limit Limit","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate IDs — generate_ids","text":"IDs","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate IDs — generate_ids","text":"","code":"if (FALSE) { # \\dontrun{ generate_ids() } # }"},{"path":"https://adafede.github.io/cascade/reference/generate_pseudochromatograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate pseudochromatograms — generate_pseudochromatograms","title":"Generate pseudochromatograms — generate_pseudochromatograms","text":"Generate pseudochromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_pseudochromatograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate pseudochromatograms — generate_pseudochromatograms","text":"","code":"generate_pseudochromatograms(   annotations = NULL,   features_informed = NULL,   features_not_informed = NULL,   file = NULL,   headers = c(bpi = \"BasePeak_0\", pda = \"PDA#1_TotalAbsorbance_0\", cad = \"UV#1_CAD_1_0\"),   detector = \"cad\",   show_example = FALSE,   min_confidence = 0.4,   min_similarity_prefilter = 0.6,   min_similarity_filter = 0.8,   mode = \"pos\",   organism = \"Swertia chirayita\",   fourier_components = 0.01,   frequency = 1,   resample = 1,   shift = 0.05,   time_min = 0.5,   time_max = 32.5 )"},{"path":"https://adafede.github.io/cascade/reference/generate_pseudochromatograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate pseudochromatograms — generate_pseudochromatograms","text":"annotations Annotations features_informed Features informed features_not_informed Features informed file File headers Headers detector Detector show_example Show example? Default FALSE min_confidence Min confidence min_similarity_prefilter Min similarity pre filter min_similarity_filter Min similarity filter mode Mode organism Organism fourier_components Fourier components frequency Frequency resample Resample shift Shift time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_pseudochromatograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate pseudochromatograms — generate_pseudochromatograms","text":"list plots","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_pseudochromatograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate pseudochromatograms — generate_pseudochromatograms","text":"","code":"if (FALSE) { # \\dontrun{ generate_pseudochromatograms(show_example = TRUE) } # }"},{"path":"https://adafede.github.io/cascade/reference/generate_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate IDs — generate_tables","title":"Generate IDs — generate_tables","text":"Generate IDs","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate IDs — generate_tables","text":"","code":"generate_tables(   annotations = NULL,   file_negative = NULL,   file_positive = NULL,   min_confidence = 0.4,   show_example = FALSE,   export_csv = TRUE,   export_html = TRUE,   export_dir = \"data/processed\",   export_name = \"cascade_table\" )"},{"path":"https://adafede.github.io/cascade/reference/generate_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate IDs — generate_tables","text":"annotations Annotations file_negative File negative file_positive File positive min_confidence Min confidence show_example Show example? Default FALSE export_csv Export CSV export_html Export HTML export_dir Export Dir export_name Export name","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate IDs — generate_tables","text":"Tables","code":""},{"path":"https://adafede.github.io/cascade/reference/generate_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate IDs — generate_tables","text":"","code":"if (FALSE) { # \\dontrun{ generate_tables() } # }"},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get peaks — get_peaks","title":"Get peaks — get_peaks","text":"Get peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get peaks — get_peaks","text":"","code":"get_peaks(   chrom_list,   lambdas,   fit = c(\"egh\", \"gaussian\", \"raw\"),   sd.max = 50,   max.iter = 100,   time.units = c(\"min\", \"s\", \"ms\"),   estimate_purity = FALSE,   noise_threshold = 0.001,   collapse = FALSE,   ... )"},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get peaks — get_peaks","text":"https://github.com/ethanbass/chromatographR","code":""},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get peaks — get_peaks","text":"chrom_list Chrom list lambdas Lambdas fit Fit sd.max Sd max max.iter Max iter time.units Time units estimate_purity Estimate purity noise_threshold Noise Threshold collapse Collapse ... ...","code":""},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get peaks — get_peaks","text":"Peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get peaks — get_peaks","text":"imported {chromatographR} package parallelization removed causing issues Windows.","code":""},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get peaks — get_peaks","text":"Ethan Bass","code":""},{"path":"https://adafede.github.io/cascade/reference/get_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get peaks — get_peaks","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/hierarchies_grouped_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchies grouped progress — hierarchies_grouped_progress","title":"Hierarchies grouped progress — hierarchies_grouped_progress","text":"Hierarchies grouped progress","code":""},{"path":"https://adafede.github.io/cascade/reference/hierarchies_grouped_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchies grouped progress — hierarchies_grouped_progress","text":"","code":"hierarchies_grouped_progress(xs)"},{"path":"https://adafede.github.io/cascade/reference/hierarchies_grouped_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchies grouped progress — hierarchies_grouped_progress","text":"xs XS","code":""},{"path":"https://adafede.github.io/cascade/reference/hierarchies_grouped_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchies grouped progress — hierarchies_grouped_progress","text":"list grouped hierarchies","code":""},{"path":"https://adafede.github.io/cascade/reference/hierarchies_grouped_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchies grouped progress — hierarchies_grouped_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/hierarchies_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchies Progress — hierarchies_progress","title":"Hierarchies Progress — hierarchies_progress","text":"Hierarchies Progress","code":""},{"path":"https://adafede.github.io/cascade/reference/hierarchies_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchies Progress — hierarchies_progress","text":"","code":"hierarchies_progress(xs, comparison)"},{"path":"https://adafede.github.io/cascade/reference/hierarchies_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchies Progress — hierarchies_progress","text":"xs XS comparison Comparison","code":""},{"path":"https://adafede.github.io/cascade/reference/hierarchies_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchies Progress — hierarchies_progress","text":"list hierarchies","code":""},{"path":"https://adafede.github.io/cascade/reference/hierarchies_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchies Progress — hierarchies_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/histograms_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Histograms progress — histograms_progress","title":"Histograms progress — histograms_progress","text":"Histograms progress","code":""},{"path":"https://adafede.github.io/cascade/reference/histograms_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histograms progress — histograms_progress","text":"","code":"histograms_progress(xs)"},{"path":"https://adafede.github.io/cascade/reference/histograms_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histograms progress — histograms_progress","text":"xs XS","code":""},{"path":"https://adafede.github.io/cascade/reference/histograms_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histograms progress — histograms_progress","text":"list histograms","code":""},{"path":"https://adafede.github.io/cascade/reference/histograms_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histograms progress — histograms_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/improve_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Improve signal — improve_signal","title":"Improve signal — improve_signal","text":"Improve signal","code":""},{"path":"https://adafede.github.io/cascade/reference/improve_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improve signal — improve_signal","text":"","code":"improve_signal(   df,   fourier_components = 0.01,   frequency = 2,   resample = 1,   time_min = 0,   time_max = Inf )"},{"path":"https://adafede.github.io/cascade/reference/improve_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improve signal — improve_signal","text":"df Dataframe fourier_components Fourier components frequency Frequency resample Resample time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/improve_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Improve signal — improve_signal","text":"dataframe improved signal","code":""},{"path":"https://adafede.github.io/cascade/reference/improve_signal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Improve signal — improve_signal","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/improve_signals_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Improve signals progress — improve_signals_progress","title":"Improve signals progress — improve_signals_progress","text":"Improve signals progress","code":""},{"path":"https://adafede.github.io/cascade/reference/improve_signals_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improve signals progress — improve_signals_progress","text":"","code":"improve_signals_progress(   xs,   fourier_components = 0.01,   frequency = 2,   resample = 1,   time_min = 0,   time_max = Inf )"},{"path":"https://adafede.github.io/cascade/reference/improve_signals_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improve signals progress — improve_signals_progress","text":"xs XS fourier_components Fourier components frequency Frequency resample Resample time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/improve_signals_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Improve signals progress — improve_signals_progress","text":"list data frames improved signals","code":""},{"path":"https://adafede.github.io/cascade/reference/improve_signals_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Improve signals progress — improve_signals_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/join_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Join peaks — join_peaks","title":"Join peaks — join_peaks","text":"Join peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/join_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join peaks — join_peaks","text":"","code":"join_peaks(chromatograms, peaks, min_area)"},{"path":"https://adafede.github.io/cascade/reference/join_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join peaks — join_peaks","text":"chromatograms Chromatograms peaks Peaks min_area Min area","code":""},{"path":"https://adafede.github.io/cascade/reference/join_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join peaks — join_peaks","text":"dataframe joined peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/join_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join peaks — join_peaks","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/keep_best_candidates.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep best candidates — keep_best_candidates","title":"Keep best candidates — keep_best_candidates","text":"Keep best candidates","code":""},{"path":"https://adafede.github.io/cascade/reference/keep_best_candidates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep best candidates — keep_best_candidates","text":"","code":"keep_best_candidates(df)"},{"path":"https://adafede.github.io/cascade/reference/keep_best_candidates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep best candidates — keep_best_candidates","text":"df Dataframe","code":""},{"path":"https://adafede.github.io/cascade/reference/keep_best_candidates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keep best candidates — keep_best_candidates","text":"dataframe containing best candidates ","code":""},{"path":"https://adafede.github.io/cascade/reference/keep_best_candidates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keep best candidates — keep_best_candidates","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/load_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Load annotations — load_annotations","title":"Load annotations — load_annotations","text":"Load annotations","code":""},{"path":"https://adafede.github.io/cascade/reference/load_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load annotations — load_annotations","text":"","code":"load_annotations(file = NULL, show_example = FALSE, mode = \"pos\")"},{"path":"https://adafede.github.io/cascade/reference/load_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load annotations — load_annotations","text":"file File show_example Show example? Default FALSE mode Mode","code":""},{"path":"https://adafede.github.io/cascade/reference/load_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load annotations — load_annotations","text":"table annotations","code":""},{"path":"https://adafede.github.io/cascade/reference/load_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load annotations — load_annotations","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/load_chromatograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Load chromatograms — load_chromatograms","title":"Load chromatograms — load_chromatograms","text":"Load chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/load_chromatograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load chromatograms — load_chromatograms","text":"","code":"load_chromatograms(   file = NULL,   headers = c(bpi = \"BasePeak_0\", pda = \"PDA#1_TotalAbsorbance_0\", cad = \"UV#1_CAD_1_0\"),   show_example = FALSE,   example_polarity = \"pos\" )"},{"path":"https://adafede.github.io/cascade/reference/load_chromatograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load chromatograms — load_chromatograms","text":"file File headers Headers show_example Show example? Default FALSE example_polarity Example polarity","code":""},{"path":"https://adafede.github.io/cascade/reference/load_chromatograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load chromatograms — load_chromatograms","text":"list chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/load_chromatograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load chromatograms — load_chromatograms","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/load_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Load features — load_features","title":"Load features — load_features","text":"Load features","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load features — load_features","text":"","code":"load_features(file = NULL, show_example = FALSE)"},{"path":"https://adafede.github.io/cascade/reference/load_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load features — load_features","text":"file File show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load features — load_features","text":"table features","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load features — load_features","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/load_features_informed.html","id":null,"dir":"Reference","previous_headings":"","what":"Load features informed — load_features_informed","title":"Load features informed — load_features_informed","text":"Load features informed","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features_informed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load features informed — load_features_informed","text":"","code":"load_features_informed(file = NULL, show_example = FALSE)"},{"path":"https://adafede.github.io/cascade/reference/load_features_informed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load features informed — load_features_informed","text":"file File show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features_informed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load features informed — load_features_informed","text":"table informed features","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features_informed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load features informed — load_features_informed","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/load_features_not_informed.html","id":null,"dir":"Reference","previous_headings":"","what":"Load features not informed — load_features_not_informed","title":"Load features not informed — load_features_not_informed","text":"Load features informed","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features_not_informed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load features not informed — load_features_not_informed","text":"","code":"load_features_not_informed(file = NULL, show_example = FALSE)"},{"path":"https://adafede.github.io/cascade/reference/load_features_not_informed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load features not informed — load_features_not_informed","text":"file File show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features_not_informed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load features not informed — load_features_not_informed","text":"table non informed features","code":""},{"path":"https://adafede.github.io/cascade/reference/load_features_not_informed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load features not informed — load_features_not_informed","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/load_ms_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load MS data — load_ms_data","title":"Load MS data — load_ms_data","text":"Load MS data","code":""},{"path":"https://adafede.github.io/cascade/reference/load_ms_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load MS data — load_ms_data","text":"","code":"load_ms_data(file = NULL, show_example = FALSE)"},{"path":"https://adafede.github.io/cascade/reference/load_ms_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load MS data — load_ms_data","text":"file File show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/load_ms_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load MS data — load_ms_data","text":"MS data","code":""},{"path":"https://adafede.github.io/cascade/reference/load_ms_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load MS data — load_ms_data","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/load_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Load name — load_name","title":"Load name — load_name","text":"Load name","code":""},{"path":"https://adafede.github.io/cascade/reference/load_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load name — load_name","text":"","code":"load_name(   file = NULL,   default = \"210619_AR_06_V_03_2_01.mzML\",   show_example = FALSE )"},{"path":"https://adafede.github.io/cascade/reference/load_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load name — load_name","text":"file File default Default show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/load_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load name — load_name","text":"name","code":""},{"path":"https://adafede.github.io/cascade/reference/load_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load name — load_name","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/make_chromatographiable.html","id":null,"dir":"Reference","previous_headings":"","what":"Make chromatographiable — make_chromatographiable","title":"Make chromatographiable — make_chromatographiable","text":"Make chromatographiable","code":""},{"path":"https://adafede.github.io/cascade/reference/make_chromatographiable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make chromatographiable — make_chromatographiable","text":"","code":"make_chromatographiable(   df,   mass_min = 50,   mass_max = 1500,   logp_min = -1,   logp_max = 6 )"},{"path":"https://adafede.github.io/cascade/reference/make_chromatographiable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make chromatographiable — make_chromatographiable","text":"df Dataframe mass_min Mass min mass_max Mass max logp_min Log P min logp_max Log P max","code":""},{"path":"https://adafede.github.io/cascade/reference/make_chromatographiable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make chromatographiable — make_chromatographiable","text":"dataframe containing chromatographiable compounds","code":""},{"path":"https://adafede.github.io/cascade/reference/make_chromatographiable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make chromatographiable — make_chromatographiable","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/make_confident.html","id":null,"dir":"Reference","previous_headings":"","what":"Make confident — make_confident","title":"Make confident — make_confident","text":"Make confident","code":""},{"path":"https://adafede.github.io/cascade/reference/make_confident.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make confident — make_confident","text":"","code":"make_confident(df, score)"},{"path":"https://adafede.github.io/cascade/reference/make_confident.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make confident — make_confident","text":"df Dataframe score Score","code":""},{"path":"https://adafede.github.io/cascade/reference/make_confident.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make confident — make_confident","text":"dataframe containing annotations scores confidence threshold set","code":""},{"path":"https://adafede.github.io/cascade/reference/make_confident.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make confident — make_confident","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/make_no_stereo.html","id":null,"dir":"Reference","previous_headings":"","what":"Make no stereo — make_no_stereo","title":"Make no stereo — make_no_stereo","text":"Make stereo","code":""},{"path":"https://adafede.github.io/cascade/reference/make_no_stereo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make no stereo — make_no_stereo","text":"","code":"make_no_stereo(df)"},{"path":"https://adafede.github.io/cascade/reference/make_no_stereo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make no stereo — make_no_stereo","text":"df Dataframe","code":""},{"path":"https://adafede.github.io/cascade/reference/make_no_stereo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make no stereo — make_no_stereo","text":"dataframe stereo structures","code":""},{"path":"https://adafede.github.io/cascade/reference/make_no_stereo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make no stereo — make_no_stereo","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/make_other.html","id":null,"dir":"Reference","previous_headings":"","what":"Make other — make_other","title":"Make other — make_other","text":"Make ","code":""},{"path":"https://adafede.github.io/cascade/reference/make_other.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make other — make_other","text":"","code":"make_other(dataframe, value = \"peak_area\")"},{"path":"https://adafede.github.io/cascade/reference/make_other.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make other — make_other","text":"dataframe Dataframe value Value","code":""},{"path":"https://adafede.github.io/cascade/reference/make_other.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make other — make_other","text":"dataframe harmonized \"\" subcategories","code":""},{"path":"https://adafede.github.io/cascade/reference/make_other.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make other — make_other","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/middle_pts.html","id":null,"dir":"Reference","previous_headings":"","what":"Middle pts — middle_pts","title":"Middle pts — middle_pts","text":"Middle pts","code":""},{"path":"https://adafede.github.io/cascade/reference/middle_pts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Middle pts — middle_pts","text":"","code":"middle_pts(x)"},{"path":"https://adafede.github.io/cascade/reference/middle_pts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Middle pts — middle_pts","text":"x X","code":""},{"path":"https://adafede.github.io/cascade/reference/middle_pts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Middle pts — middle_pts","text":"Middle pts","code":""},{"path":"https://adafede.github.io/cascade/reference/middle_pts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Middle pts — middle_pts","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/molinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Molinfo — molinfo","title":"Molinfo — molinfo","text":"Molinfo","code":""},{"path":"https://adafede.github.io/cascade/reference/molinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Molinfo — molinfo","text":"","code":"molinfo(x)"},{"path":"https://adafede.github.io/cascade/reference/molinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Molinfo — molinfo","text":"x X","code":""},{"path":"https://adafede.github.io/cascade/reference/molinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Molinfo — molinfo","text":"mol image","code":""},{"path":"https://adafede.github.io/cascade/reference/molinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Molinfo — molinfo","text":"","code":"NULL #> NULL"},{"path":[]},{"path":"https://adafede.github.io/cascade/reference/no_other.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No other — no_other","text":"","code":"no_other(dataframe)"},{"path":"https://adafede.github.io/cascade/reference/no_other.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"No other — no_other","text":"dataframe Dataframe","code":""},{"path":"https://adafede.github.io/cascade/reference/no_other.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"No other — no_other","text":"dataframe ","code":""},{"path":"https://adafede.github.io/cascade/reference/no_other.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"No other — no_other","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/normalize_chromato.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize chromato — normalize_chromato","title":"Normalize chromato — normalize_chromato","text":"Normalize chromato","code":""},{"path":"https://adafede.github.io/cascade/reference/normalize_chromato.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize chromato — normalize_chromato","text":"","code":"normalize_chromato(x, df_xy)"},{"path":"https://adafede.github.io/cascade/reference/normalize_chromato.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize chromato — normalize_chromato","text":"x X df_xy Df X Y","code":""},{"path":"https://adafede.github.io/cascade/reference/normalize_chromato.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize chromato — normalize_chromato","text":"normalized chromato","code":""},{"path":"https://adafede.github.io/cascade/reference/normalize_chromato.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize chromato — normalize_chromato","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/normalize_chromatograms_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize chromatograms list — normalize_chromatograms_list","title":"Normalize chromatograms list — normalize_chromatograms_list","text":"Normalize chromatograms list","code":""},{"path":"https://adafede.github.io/cascade/reference/normalize_chromatograms_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize chromatograms list — normalize_chromatograms_list","text":"","code":"normalize_chromatograms_list(   list,   shift = 0,   normalize_intensity = TRUE,   normalize_time = FALSE )"},{"path":"https://adafede.github.io/cascade/reference/normalize_chromatograms_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize chromatograms list — normalize_chromatograms_list","text":"list List shift Shift normalize_intensity Normalize time normalize_time Normalize intensity","code":""},{"path":"https://adafede.github.io/cascade/reference/normalize_chromatograms_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize chromatograms list — normalize_chromatograms_list","text":"dataframe normalized chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/normalize_chromatograms_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize chromatograms list — normalize_chromatograms_list","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/p_acn_i.html","id":null,"dir":"Reference","previous_headings":"","what":"P ACN I — p_acn_i","title":"P ACN I — p_acn_i","text":"P ACN ","code":""},{"path":"https://adafede.github.io/cascade/reference/p_acn_i.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"P ACN I — p_acn_i","text":"","code":"p_acn_i(acn_eluent, q1, q2, q3)"},{"path":"https://adafede.github.io/cascade/reference/p_acn_i.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"P ACN I — p_acn_i","text":"acn_eluent ACN eluent q1 Q1 q2 Q2 q3 Q3","code":""},{"path":"https://adafede.github.io/cascade/reference/p_acn_i.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"P ACN I — p_acn_i","text":"P ACN ","code":""},{"path":"https://adafede.github.io/cascade/reference/p_acn_i.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"P ACN I — p_acn_i","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/peaks_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Peaks progress — peaks_progress","title":"Peaks progress — peaks_progress","text":"Peaks progress","code":""},{"path":"https://adafede.github.io/cascade/reference/peaks_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Peaks progress — peaks_progress","text":"","code":"peaks_progress(df_xy)"},{"path":"https://adafede.github.io/cascade/reference/peaks_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Peaks progress — peaks_progress","text":"df_xy Df X Y","code":""},{"path":"https://adafede.github.io/cascade/reference/peaks_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Peaks progress — peaks_progress","text":"list peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/peaks_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Peaks progress — peaks_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_chromatogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot chromatogram — plot_chromatogram","title":"Plot chromatogram — plot_chromatogram","text":"Plot chromatogram","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_chromatogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot chromatogram — plot_chromatogram","text":"","code":"plot_chromatogram(df, text)"},{"path":"https://adafede.github.io/cascade/reference/plot_chromatogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot chromatogram — plot_chromatogram","text":"df Dataframe text Text","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_chromatogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot chromatogram — plot_chromatogram","text":"plot chromatogram","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_chromatogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot chromatogram — plot_chromatogram","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histograms — plot_histograms","title":"Plot histograms — plot_histograms","text":"Plot histograms","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histograms — plot_histograms","text":"","code":"plot_histograms(dataframe, chromatogram, label, y = \"values\", xlab = TRUE)"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histograms — plot_histograms","text":"dataframe Dataframe chromatogram Chromatogram label Label y Y xlab Xlab","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histograms — plot_histograms","text":"plot histograms","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot histograms — plot_histograms","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_confident.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histograms confident — plot_histograms_confident","title":"Plot histograms confident — plot_histograms_confident","text":"Plot histograms confident","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_confident.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histograms confident — plot_histograms_confident","text":"","code":"plot_histograms_confident(   dataframe,   chromatogram,   level = \"max\",   time_min,   time_max )"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_confident.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histograms confident — plot_histograms_confident","text":"dataframe Dataframe chromatogram Chromatogram level Level time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_confident.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histograms confident — plot_histograms_confident","text":"plot confident histograms","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_confident.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot histograms confident — plot_histograms_confident","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_litt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histograms litt — plot_histograms_litt","title":"Plot histograms litt — plot_histograms_litt","text":"Plot histograms litt","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_litt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histograms litt — plot_histograms_litt","text":"","code":"plot_histograms_litt(dataframe, label, y = \"values\", xlab = TRUE)"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_litt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histograms litt — plot_histograms_litt","text":"dataframe Dataframe label Label y Y xlab Xlab","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_litt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histograms litt — plot_histograms_litt","text":"plot literature histograms","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_litt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot histograms litt — plot_histograms_litt","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_taxo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot histograms taxo — plot_histograms_taxo","title":"Plot histograms taxo — plot_histograms_taxo","text":"Plot histograms taxo","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_taxo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot histograms taxo — plot_histograms_taxo","text":"","code":"plot_histograms_taxo(   dataframe,   chromatogram,   level = \"max\",   mode = \"pos\",   time_min,   time_max )"},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_taxo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot histograms taxo — plot_histograms_taxo","text":"dataframe Dataframe chromatogram Chromatogram level Level mode Mode time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_taxo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot histograms taxo — plot_histograms_taxo","text":"plot taxo histograms","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_histograms_taxo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot histograms taxo — plot_histograms_taxo","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_peak_detection.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot peak detection — plot_peak_detection","title":"Plot peak detection — plot_peak_detection","text":"Plot peak detection","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_peak_detection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot peak detection — plot_peak_detection","text":"","code":"plot_peak_detection(df1, df2, fun)"},{"path":"https://adafede.github.io/cascade/reference/plot_peak_detection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot peak detection — plot_peak_detection","text":"df1 DF 1 containing chromatogram df2 DF 2 containing peaks fun Fun","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_peak_detection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot peak detection — plot_peak_detection","text":"plot (non-)detected peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_peak_detection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot peak detection — plot_peak_detection","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_results_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results 1 — plot_results_1","title":"Plot results 1 — plot_results_1","text":"Plot results 1","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_results_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results 1 — plot_results_1","text":"","code":"plot_results_1(list, chromatogram, mode = \"pos\", time_min, time_max)"},{"path":"https://adafede.github.io/cascade/reference/plot_results_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results 1 — plot_results_1","text":"list List chromatogram Chromatogram mode Mode time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_results_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results 1 — plot_results_1","text":"list plots","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_results_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot results 1 — plot_results_1","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_results_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot results 2 — plot_results_2","title":"Plot results 2 — plot_results_2","text":"Plot results 2","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_results_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot results 2 — plot_results_2","text":"","code":"plot_results_2(list)"},{"path":"https://adafede.github.io/cascade/reference/plot_results_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot results 2 — plot_results_2","text":"list List","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_results_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot results 2 — plot_results_2","text":"list plots","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_results_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot results 2 — plot_results_2","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/plot_tima.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot TIMA — plot_tima","title":"Plot TIMA — plot_tima","text":"Plot TIMA","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_tima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot TIMA — plot_tima","text":"","code":"plot_tima(tables)"},{"path":"https://adafede.github.io/cascade/reference/plot_tima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot TIMA — plot_tima","text":"tables Tables","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_tima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot TIMA — plot_tima","text":"Pretty plots","code":""},{"path":"https://adafede.github.io/cascade/reference/plot_tima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot TIMA — plot_tima","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/predict_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict response — predict_response","title":"Predict response — predict_response","text":"Predict response","code":""},{"path":"https://adafede.github.io/cascade/reference/predict_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict response — predict_response","text":"","code":"predict_response(   acn = 100,   peak_area,   p1q1 = 1e-05,   p1q2 = -6e-04,   p1q3 = -0.0778,   p2q1 = 2e-05,   p2q2 = -0.00022,   p2q3 = 0.05499,   p3q1 = -0.00017,   p3q2 = 0.0209,   p3q3 = 1.4041 )"},{"path":"https://adafede.github.io/cascade/reference/predict_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict response — predict_response","text":"acn ACN peak_area Peak area p1q1 P1Q1 p1q2 P1Q2 p1q3 P1Q3 p2q1 P2Q1 p2q2 P2Q2 p2q3 P2Q3 p3q1 P3Q1 p3q2 P3Q2 p3q3 P3Q3","code":""},{"path":"https://adafede.github.io/cascade/reference/predict_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict response — predict_response","text":"concentration","code":""},{"path":"https://adafede.github.io/cascade/reference/predict_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict response — predict_response","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prehistograms_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Prehistograms progress — prehistograms_progress","title":"Prehistograms progress — prehistograms_progress","text":"Prehistograms progress","code":""},{"path":"https://adafede.github.io/cascade/reference/prehistograms_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prehistograms progress — prehistograms_progress","text":"","code":"prehistograms_progress(xs)"},{"path":"https://adafede.github.io/cascade/reference/prehistograms_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prehistograms progress — prehistograms_progress","text":"xs XS","code":""},{"path":"https://adafede.github.io/cascade/reference/prehistograms_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prehistograms progress — prehistograms_progress","text":"list prehistograms","code":""},{"path":"https://adafede.github.io/cascade/reference/prehistograms_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prehistograms progress — prehistograms_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare comparison — prepare_comparison","title":"Prepare comparison — prepare_comparison","text":"Prepare comparison","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare comparison — prepare_comparison","text":"","code":"prepare_comparison(   features_informed = NULL,   features_not_informed = NULL,   candidates_confident,   min_similarity_prefilter = 0.6,   min_similarity_filter = 0.8,   mode = \"pos\",   show_example = FALSE )"},{"path":"https://adafede.github.io/cascade/reference/prepare_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare comparison — prepare_comparison","text":"features_informed Features informed features_not_informed Features informed candidates_confident Candidates confident min_similarity_prefilter Min similarity pre filter min_similarity_filter Min similarity filter mode Mode show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare comparison — prepare_comparison","text":"list peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare comparison — prepare_comparison","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare features — prepare_features","title":"Prepare features — prepare_features","text":"Prepare features","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare features — prepare_features","text":"","code":"prepare_features(df, min_intensity, name)"},{"path":"https://adafede.github.io/cascade/reference/prepare_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare features — prepare_features","text":"df Df min_intensity Min intensity name Name","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare features — prepare_features","text":"dataframe prepared features","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare features — prepare_features","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_hierarchy.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare hierarchy — prepare_hierarchy","title":"Prepare hierarchy — prepare_hierarchy","text":"Prepare hierarchy","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_hierarchy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare hierarchy — prepare_hierarchy","text":"","code":"prepare_hierarchy(   dataframe,   type = \"analysis\",   detector = \"ms\",   rescale = FALSE )"},{"path":"https://adafede.github.io/cascade/reference/prepare_hierarchy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare hierarchy — prepare_hierarchy","text":"dataframe Dataframe type Type detector Detector rescale Rescale","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_hierarchy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare hierarchy — prepare_hierarchy","text":"dataframe prepared hierarchy","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_hierarchy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare hierarchy — prepare_hierarchy","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_mz.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare mz — prepare_mz","title":"Prepare mz — prepare_mz","text":"Prepare mz","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_mz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare mz — prepare_mz","text":"","code":"prepare_mz(x)"},{"path":"https://adafede.github.io/cascade/reference/prepare_mz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare mz — prepare_mz","text":"x X","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_mz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare mz — prepare_mz","text":"list prepared mz's","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_mz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare mz — prepare_mz","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare peaks — prepare_peaks","title":"Prepare peaks — prepare_peaks","text":"Prepare peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare peaks — prepare_peaks","text":"","code":"prepare_peaks(x)"},{"path":"https://adafede.github.io/cascade/reference/prepare_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare peaks — prepare_peaks","text":"x X","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare peaks — prepare_peaks","text":"Prepared peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare peaks — prepare_peaks","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare plot — prepare_plot","title":"Prepare plot — prepare_plot","text":"Prepare plot","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare plot — prepare_plot","text":"","code":"prepare_plot(dataframe, organism = \"species\")"},{"path":"https://adafede.github.io/cascade/reference/prepare_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare plot — prepare_plot","text":"dataframe Dataframe organism Organism","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare plot — prepare_plot","text":"dataframe prepared plots","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare plot — prepare_plot","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_plot_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare plot 2 — prepare_plot_2","title":"Prepare plot 2 — prepare_plot_2","text":"Prepare plot 2","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_plot_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare plot 2 — prepare_plot_2","text":"","code":"prepare_plot_2(dataframe)"},{"path":"https://adafede.github.io/cascade/reference/prepare_plot_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare plot 2 — prepare_plot_2","text":"dataframe Dataframe","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_plot_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare plot 2 — prepare_plot_2","text":"dataframe prepared plots","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_plot_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare plot 2 — prepare_plot_2","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_rt.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare rt — prepare_rt","title":"Prepare rt — prepare_rt","text":"Prepare rt","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_rt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare rt — prepare_rt","text":"","code":"prepare_rt(x, shift = 0)"},{"path":"https://adafede.github.io/cascade/reference/prepare_rt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare rt — prepare_rt","text":"x X shift Shift","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_rt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare rt — prepare_rt","text":"Prepared RTs","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_rt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare rt — prepare_rt","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/prepare_tima_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare TIMA annotations — prepare_tima_annotations","title":"Prepare TIMA annotations — prepare_tima_annotations","text":"Prepare TIMA annotations","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_tima_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare TIMA annotations — prepare_tima_annotations","text":"","code":"prepare_tima_annotations(   annotations = NULL,   predicted_classes = FALSE,   min_score_initial = 0,   min_score_biological = 0,   min_score_chemical = 0,   min_score_final = 0,   min_matched_peaks_absolute = 0L,   min_matched_peaks_percentage = 0,   min_peaks = 3L,   libraries = c(\"gnps\", \"massbank\", \"merlin\", \"ISDB\", \"ISDB - Wikidata\", \"TIMA MS1\"),   show_example = FALSE )"},{"path":"https://adafede.github.io/cascade/reference/prepare_tima_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare TIMA annotations — prepare_tima_annotations","text":"annotations annotations predicted_classes Show predicted classes? Default FALSE min_score_initial Minimal initial score min_score_biological Minimal biological score min_score_chemical Minimal chemical score min_score_final Minimal final score min_matched_peaks_absolute Minimal number matched peaks min_matched_peaks_percentage Minimal percentage matched peaks min_peaks Minimal number peaks spectrum libraries Libraries consider show_example Show example? Default FALSE","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_tima_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare TIMA annotations — prepare_tima_annotations","text":"Prepared tables","code":""},{"path":"https://adafede.github.io/cascade/reference/prepare_tima_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare TIMA annotations — prepare_tima_annotations","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/preprocess_chromatograms.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess chromatograms — preprocess_chromatograms","title":"Preprocess chromatograms — preprocess_chromatograms","text":"Preprocess chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/preprocess_chromatograms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess chromatograms — preprocess_chromatograms","text":"","code":"preprocess_chromatograms(   detector = \"cad\",   fourier_components = 0.01,   frequency = 2,   list,   name,   resample = 1,   shift = 0,   time_min = 0,   time_max = Inf )"},{"path":"https://adafede.github.io/cascade/reference/preprocess_chromatograms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess chromatograms — preprocess_chromatograms","text":"detector Detector fourier_components Fourier components frequency Frequency list List name Name resample Resample shift Shift time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/preprocess_chromatograms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess chromatograms — preprocess_chromatograms","text":"list preprocessed chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/preprocess_chromatograms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess chromatograms — preprocess_chromatograms","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/preprocess_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess peaks — preprocess_peaks","title":"Preprocess peaks — preprocess_peaks","text":"Preprocess peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/preprocess_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess peaks — preprocess_peaks","text":"","code":"preprocess_peaks(   detector = \"cad\",   df_features,   df_long,   df_xy,   name,   shift = 0,   min_area = 0 )"},{"path":"https://adafede.github.io/cascade/reference/preprocess_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess peaks — preprocess_peaks","text":"detector Detector df_features DF features df_long DF long df_xy DF X Y name Name shift shift min_area Minimum area","code":""},{"path":"https://adafede.github.io/cascade/reference/preprocess_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess peaks — preprocess_peaks","text":"list lists dataframe preprocessed peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/preprocess_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess peaks — preprocess_peaks","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/process_compare_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Process compare peaks — process_compare_peaks","title":"Process compare peaks — process_compare_peaks","text":"Process compare peaks","code":""},{"path":"https://adafede.github.io/cascade/reference/process_compare_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process compare peaks — process_compare_peaks","text":"","code":"process_compare_peaks(   file = NULL,   features = NULL,   type = \"baselined\",   detector = \"cad\",   headers = c(bpi = \"BasePeak_0\", pda = \"PDA#1_TotalAbsorbance_0\", cad = \"UV#1_CAD_1_0\"),   export_dir = \"data/interim/peaks\",   show_example = FALSE,   fourier_components = 0.01,   frequency = 1,   min_area = 0.005,   min_intensity = 10000,   resample = 1,   shift = 0.05,   time_min = 0.5,   time_max = 32.5 )"},{"path":"https://adafede.github.io/cascade/reference/process_compare_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process compare peaks — process_compare_peaks","text":"file File path features Features path type Type. \"original\", \"baselined\" \"improved\" detector Detector headers Headers export_dir Export directory show_example Show example? Default FALSE fourier_components Fourier components frequency Frequency min_area Min area min_intensity Min intensity resample Resample shift Shift time_min Time min time_max Time max","code":""},{"path":"https://adafede.github.io/cascade/reference/process_compare_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process compare peaks — process_compare_peaks","text":"plot (non-)aligned chromatograms","code":""},{"path":"https://adafede.github.io/cascade/reference/process_compare_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process compare peaks — process_compare_peaks","text":"","code":"if (FALSE) { # \\dontrun{ check_chromatograms_alignment(show_example = TRUE) } # }"},{"path":"https://adafede.github.io/cascade/reference/queries_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Queries progress — queries_progress","title":"Queries progress — queries_progress","text":"Queries progress","code":""},{"path":"https://adafede.github.io/cascade/reference/queries_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Queries progress — queries_progress","text":"","code":"queries_progress(   xs,   start = \"0\",   end = \"9999\",   limit = \"1000000\",   query_part_1,   query_part_2,   query_part_3,   query_part_4 )"},{"path":"https://adafede.github.io/cascade/reference/queries_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Queries progress — queries_progress","text":"xs XS start Start end End limit Limit query_part_1 query_part_1 query_part_2 query_part_2 query_part_3 query_part_3 query_part_4 query_part_4","code":""},{"path":"https://adafede.github.io/cascade/reference/queries_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Queries progress — queries_progress","text":"list queries","code":""},{"path":"https://adafede.github.io/cascade/reference/queries_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Queries progress — queries_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/save_histograms_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Save histograms progress — save_histograms_progress","title":"Save histograms progress — save_histograms_progress","text":"Save histograms progress","code":""},{"path":"https://adafede.github.io/cascade/reference/save_histograms_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save histograms progress — save_histograms_progress","text":"","code":"save_histograms_progress(xs)"},{"path":"https://adafede.github.io/cascade/reference/save_histograms_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save histograms progress — save_histograms_progress","text":"xs XS","code":""},{"path":"https://adafede.github.io/cascade/reference/save_histograms_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save histograms progress — save_histograms_progress","text":"Saved histograms","code":""},{"path":"https://adafede.github.io/cascade/reference/save_histograms_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save histograms progress — save_histograms_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/save_treemaps_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Save treemaps progress — save_treemaps_progress","title":"Save treemaps progress — save_treemaps_progress","text":"Save treemaps progress","code":""},{"path":"https://adafede.github.io/cascade/reference/save_treemaps_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save treemaps progress — save_treemaps_progress","text":"","code":"save_treemaps_progress(xs, type = \"treemap\")"},{"path":"https://adafede.github.io/cascade/reference/save_treemaps_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save treemaps progress — save_treemaps_progress","text":"xs XS type Type","code":""},{"path":"https://adafede.github.io/cascade/reference/save_treemaps_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save treemaps progress — save_treemaps_progress","text":"Saved treemaps","code":""},{"path":"https://adafede.github.io/cascade/reference/save_treemaps_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save treemaps progress — save_treemaps_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/second_der.html","id":null,"dir":"Reference","previous_headings":"","what":"Second der — second_der","title":"Second der — second_der","text":"Second der","code":""},{"path":"https://adafede.github.io/cascade/reference/second_der.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second der — second_der","text":"","code":"second_der(x, y)"},{"path":"https://adafede.github.io/cascade/reference/second_der.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second der — second_der","text":"x X y Y","code":""},{"path":"https://adafede.github.io/cascade/reference/second_der.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second der — second_der","text":"second derivative","code":""},{"path":"https://adafede.github.io/cascade/reference/second_der.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second der — second_der","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/signal_sharpening.html","id":null,"dir":"Reference","previous_headings":"","what":"Signal sharpening — signal_sharpening","title":"Signal sharpening — signal_sharpening","text":"Signal sharpening","code":""},{"path":"https://adafede.github.io/cascade/reference/signal_sharpening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Signal sharpening — signal_sharpening","text":"","code":"signal_sharpening(   time,   intensity,   k2 = 250,   k4 = 1250000,   sigma = 0.05,   Smoothing_width = 8,   Baseline_adjust = 0 )"},{"path":"https://adafede.github.io/cascade/reference/signal_sharpening.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Signal sharpening — signal_sharpening","text":"time time intensity intensity k2 K2 k4 K4 sigma Sigma Smoothing_width Smoothing width Baseline_adjust Baseline adjust","code":""},{"path":"https://adafede.github.io/cascade/reference/signal_sharpening.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Signal sharpening — signal_sharpening","text":"sharpened signal","code":""},{"path":"https://adafede.github.io/cascade/reference/signal_sharpening.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Signal sharpening — signal_sharpening","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/tables_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Tables progress — tables_progress","title":"Tables progress — tables_progress","text":"Tables progress","code":""},{"path":"https://adafede.github.io/cascade/reference/tables_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tables progress — tables_progress","text":"","code":"tables_progress(xs, structures_classified)"},{"path":"https://adafede.github.io/cascade/reference/tables_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tables progress — tables_progress","text":"xs XS structures_classified structures classified","code":""},{"path":"https://adafede.github.io/cascade/reference/tables_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tables progress — tables_progress","text":"list tables","code":""},{"path":"https://adafede.github.io/cascade/reference/tables_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tables progress — tables_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/taxon_name_to_qid.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxon name to QID — taxon_name_to_qid","title":"Taxon name to QID — taxon_name_to_qid","text":"Taxon name QID","code":""},{"path":"https://adafede.github.io/cascade/reference/taxon_name_to_qid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxon name to QID — taxon_name_to_qid","text":"","code":"taxon_name_to_qid(taxon_name)"},{"path":"https://adafede.github.io/cascade/reference/taxon_name_to_qid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxon name to QID — taxon_name_to_qid","text":"taxon_name Taxon name","code":""},{"path":"https://adafede.github.io/cascade/reference/taxon_name_to_qid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxon name to QID — taxon_name_to_qid","text":"QID","code":""},{"path":"https://adafede.github.io/cascade/reference/taxon_name_to_qid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxon name to QID — taxon_name_to_qid","text":"","code":"if (FALSE) { # \\dontrun{ taxon_name_to_qid(taxon_name = \"Gentiana lutea\") } # }"},{"path":"https://adafede.github.io/cascade/reference/transform_ms.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform MS — transform_ms","title":"Transform MS — transform_ms","text":"Transform MS","code":""},{"path":"https://adafede.github.io/cascade/reference/transform_ms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform MS — transform_ms","text":"","code":"transform_ms(x)"},{"path":"https://adafede.github.io/cascade/reference/transform_ms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform MS — transform_ms","text":"x X","code":""},{"path":"https://adafede.github.io/cascade/reference/transform_ms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform MS — transform_ms","text":"list transformed MS","code":""},{"path":"https://adafede.github.io/cascade/reference/transform_ms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform MS — transform_ms","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Treemaps progress — treemaps_progress","title":"Treemaps progress — treemaps_progress","text":"Treemaps progress","code":""},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treemaps progress — treemaps_progress","text":"","code":"treemaps_progress(xs, type = \"treemap\", hierarchies)"},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treemaps progress — treemaps_progress","text":"xs XS type Type hierarchies Hierarchies","code":""},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treemaps progress — treemaps_progress","text":"list treemaps","code":""},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treemaps progress — treemaps_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress_no_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Treemaps progress no title — treemaps_progress_no_title","title":"Treemaps progress no title — treemaps_progress_no_title","text":"Treemaps progress title","code":""},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress_no_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treemaps progress no title — treemaps_progress_no_title","text":"","code":"treemaps_progress_no_title(xs, type = \"treemap\", hierarchies)"},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress_no_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treemaps progress no title — treemaps_progress_no_title","text":"xs XS type Type hierarchies Hierarchies","code":""},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress_no_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Treemaps progress no title — treemaps_progress_no_title","text":"list treemaps title","code":""},{"path":"https://adafede.github.io/cascade/reference/treemaps_progress_no_title.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Treemaps progress no title — treemaps_progress_no_title","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/wiki_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Wiki progress — wiki_progress","title":"Wiki progress — wiki_progress","text":"Wiki progress","code":""},{"path":"https://adafede.github.io/cascade/reference/wiki_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wiki progress — wiki_progress","text":"","code":"wiki_progress(xs)"},{"path":"https://adafede.github.io/cascade/reference/wiki_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wiki progress — wiki_progress","text":"xs XS","code":""},{"path":"https://adafede.github.io/cascade/reference/wiki_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wiki progress — wiki_progress","text":"list results Wikidata queries","code":""},{"path":"https://adafede.github.io/cascade/reference/wiki_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wiki progress — wiki_progress","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/reference/y_as_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Y as NA — y_as_na","title":"Y as NA — y_as_na","text":"Y NA","code":""},{"path":"https://adafede.github.io/cascade/reference/y_as_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Y as NA — y_as_na","text":"","code":"y_as_na(x, y)"},{"path":"https://adafede.github.io/cascade/reference/y_as_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Y as NA — y_as_na","text":"x x y y","code":""},{"path":"https://adafede.github.io/cascade/reference/y_as_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Y as NA — y_as_na","text":"Y's replaced NA's X","code":""},{"path":"https://adafede.github.io/cascade/reference/y_as_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Y as NA — y_as_na","text":"","code":"NULL #> NULL"},{"path":"https://adafede.github.io/cascade/news/index.html","id":"cascade-009001","dir":"Changelog","previous_headings":"","what":"cascade 0.0.9001","title":"cascade 0.0.9001","text":"Adapt tima updates Added helper functions visualize TIMA results Updated minimal R version 4.4.0 (related Bioconductor dependencies)","code":""},{"path":"https://adafede.github.io/cascade/news/index.html","id":"cascade-009000","dir":"Changelog","previous_headings":"","what":"cascade 0.0.9000","title":"cascade 0.0.9000","text":"Initial version.","code":""}]
